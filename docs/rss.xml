<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Lobotomy</title><link>https://parisni.github.io/weblog/</link><description></description><atom:link href="https://parisni.github.io/weblog/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2018 &lt;a href="mailto:nicolas.paris@riseup.net"&gt;Parisni&lt;/a&gt; </copyright><lastBuildDate>Mon, 12 Nov 2018 20:33:48 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Loading Postgres from Sqoop</title><link>https://parisni.github.io/weblog/posts/loading-postgres-from-sqoop/</link><dc:creator>Parisni</dc:creator><description>&lt;div&gt;&lt;p&gt;PostgreSQL and Hadoop are complementary technologies. PostgreSQL outperforms
Hadoop to retrieve small amount of information from multiple tables. Haddop
outperforms PostgreSQL to transform multiple tables into simplfied and
aggregated tables. So, how to load PostgreSQL efficiently from Hadoop ?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://parisni.github.io/weblog/posts/loading-postgres-from-sqoop/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>big-data</category><category>hadoop</category><category>postgresql</category><category>sqoop</category><guid>https://parisni.github.io/weblog/posts/loading-postgres-from-sqoop/</guid><pubDate>Sun, 11 Nov 2018 20:19:55 GMT</pubDate></item><item><title>Deploying Nikola with Githup Pages</title><link>https://parisni.github.io/weblog/posts/deploying-with-githup-pages/</link><dc:creator>Parisni</dc:creator><description>&lt;div&gt;&lt;div class="section" id="the-simple-way"&gt;
&lt;h2&gt;The simple way&lt;/h2&gt;
&lt;p&gt;Its about using the &lt;em&gt;docs&lt;/em&gt; github pages method.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;create a new github repository&lt;/li&gt;
&lt;li&gt;create a &lt;em&gt;/docs/&lt;/em&gt; folder with the website in it&lt;/li&gt;
&lt;li&gt;enable github pages and specify the &lt;em&gt;docs&lt;/em&gt; folder as html source&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="why-the-simple-way"&gt;
&lt;h2&gt;Why the simple way&lt;/h2&gt;
&lt;p&gt;The alternate way is to use a &lt;em&gt;gh-pages&lt;/em&gt; branch to store the website. The main problem is the method leads to highly complex deployment method with &lt;a class="reference external" href="http://www.damian.oquanta.info/posts/one-line-deployment-of-your-site-to-gh-pages.html"&gt;git subtree&lt;/a&gt; or &lt;a class="reference external" href="https://www.asmeurer.com/blog/posts/moving-to-github-pages-with-nikola/"&gt;other way&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A second problem is this method make either duplicate website source code, or makes building the website for each post.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>nikola</category><category>python</category><guid>https://parisni.github.io/weblog/posts/deploying-with-githup-pages/</guid><pubDate>Sun, 11 Nov 2018 17:07:33 GMT</pubDate></item><item><title>A decent python configuration</title><link>https://parisni.github.io/weblog/posts/a-decent-python-configuration/</link><dc:creator>Parisni</dc:creator><description>&lt;div class="section" id="use-anaconda"&gt;
&lt;h2&gt;Use Anaconda&lt;/h2&gt;
&lt;p&gt;Anaconda allows to have multiple python versions. This is much easier than using &lt;em&gt;virtualenv&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://parisni.github.io/weblog/posts/a-decent-python-configuration/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>https://parisni.github.io/weblog/posts/a-decent-python-configuration/</guid><pubDate>Sun, 11 Nov 2018 10:43:34 GMT</pubDate></item><item><title>Postgresql 11 on Archlinux</title><link>https://parisni.github.io/weblog/posts/archlinux-pgsql-11/</link><dc:creator>Parisni</dc:creator><description>&lt;div&gt;&lt;p&gt;I am fairly new to archlinux. Postgresql 11 is fairly new too. Here are the steps to install that version.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://parisni.github.io/weblog/posts/archlinux-pgsql-11/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>archlinux</category><category>postgresql</category><guid>https://parisni.github.io/weblog/posts/archlinux-pgsql-11/</guid><pubDate>Fri, 26 Oct 2018 22:00:00 GMT</pubDate></item><item><title>Hive llap resource consumption</title><link>https://parisni.github.io/weblog/posts/hive-llap-resources/</link><dc:creator>Parisni</dc:creator><description>&lt;div class="section" id="resource-consumption"&gt;
&lt;h2&gt;Resource consumption&lt;/h2&gt;
&lt;p&gt;Hive llap is quite complicated to tune.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://parisni.github.io/weblog/posts/hive-llap-resources/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>big-data</category><category>hive</category><guid>https://parisni.github.io/weblog/posts/hive-llap-resources/</guid><pubDate>Thu, 06 Sep 2018 22:00:00 GMT</pubDate></item><item><title>Email Best Practices</title><link>https://parisni.github.io/weblog/posts/email-best-practice/</link><dc:creator>Parisni</dc:creator><description>&lt;div&gt;&lt;p&gt;I will post here all best practices about writing emails. A lot of useful
information can be found &lt;a class="reference external" href="https://www.ietf.org/rfc/rfc3676.txt"&gt;there&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://parisni.github.io/weblog/posts/email-best-practice/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>archlinux</category><category>postgresql</category><guid>https://parisni.github.io/weblog/posts/email-best-practice/</guid><pubDate>Sun, 02 Sep 2018 22:00:00 GMT</pubDate></item><item><title>Spelling, mutt &amp; vim</title><link>https://parisni.github.io/weblog/posts/mutt-vim/</link><dc:creator>Parisni</dc:creator><description>&lt;div&gt;&lt;p&gt;Having a correct spelling is important in society. This is true specially when
come time to write emails.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://parisni.github.io/weblog/posts/mutt-vim/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>email</category><category>mutt</category><category>vim</category><guid>https://parisni.github.io/weblog/posts/mutt-vim/</guid><pubDate>Sun, 02 Sep 2018 22:00:00 GMT</pubDate></item><item><title>Mutt Search on Steroids</title><link>https://parisni.github.io/weblog/posts/mutt-search/</link><dc:creator>Parisni</dc:creator><description>&lt;div&gt;&lt;p&gt;Mutt has a powerful feature to dig into the history: the &lt;strong&gt;limit&lt;/strong&gt; feature. By
pressing &lt;cite&gt;l&lt;/cite&gt; it is then possible to write a query to filter the mails. It is
comparable to the &lt;strong&gt;WHERE&lt;/strong&gt; part of a SQL statement and allow combining &lt;strong&gt;AND&lt;/strong&gt;
operators. In particular the &lt;strong&gt;~b&lt;/strong&gt; predicate allow to search within the email's
body and the &lt;cite&gt;~X&lt;/cite&gt; lets filter attachments.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://parisni.github.io/weblog/posts/mutt-search/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>email</category><category>mu</category><category>mutt</category><guid>https://parisni.github.io/weblog/posts/mutt-search/</guid><pubDate>Wed, 29 Aug 2018 22:00:00 GMT</pubDate></item><item><title>Mutt &amp; Sidebar</title><link>https://parisni.github.io/weblog/posts/mutt-sidebar/</link><dc:creator>Parisni</dc:creator><description>&lt;div&gt;&lt;p&gt;When receiving many mails a day, having a single mail pool makes easy to loose
important emails. Using mailboxes (ie: sub folders) with rules becomes a need.
The good point is all the mailboxes are regularly updated to alert when
incoming email are received.  The few steps are generating a mailbox tree,
mooving mails manually, mooving them automatically, and finally mooving the
history in batch.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://parisni.github.io/weblog/posts/mutt-sidebar/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>email</category><category>mutt</category><guid>https://parisni.github.io/weblog/posts/mutt-sidebar/</guid><pubDate>Sat, 25 Aug 2018 22:00:00 GMT</pubDate></item><item><title>Encrypt &amp; Sign Mails</title><link>https://parisni.github.io/weblog/posts/mutt-aes/</link><dc:creator>Parisni</dc:creator><description>&lt;div&gt;&lt;p&gt;Cacert.org offers validated certificates with a network of trusted people. That's fun !&lt;/p&gt;
&lt;p&gt;&lt;a href="https://parisni.github.io/weblog/posts/mutt-aes/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>email</category><category>mutt</category><guid>https://parisni.github.io/weblog/posts/mutt-aes/</guid><pubDate>Fri, 24 Aug 2018 22:00:00 GMT</pubDate></item></channel></rss>